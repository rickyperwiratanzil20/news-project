# # For more information: https://laravel.com/docs/sail
# version: '3'
# services:
#     laravel.test:
#         build:
#             context: ./vendor/laravel/sail/runtimes/8.2
#             dockerfile: Dockerfile
#             args:
#                 WWWGROUP: '${WWWGROUP}'
#         user: "${UID}:${GID}"
#         image: sail-8.2/app
#         extra_hosts:
#             - 'host.docker.internal:host-gateway'
#         ports:
#             - '${APP_PORT:-80}:80'
#             - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
#         environment:
#             WWWUSER: '${WWWUSER}'
#             LARAVEL_SAIL: 1
#             XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
#             XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
#         volumes:
#             - '.:/var/www/html'
#         networks:
#             - sail
#         depends_on:
#             - mysql
#     mysql:
#         image: 'mysql/mysql-server:8.0'
#         ports:
#             - '${FORWARD_DB_PORT:-3306}:3306'
#         environment:
#             MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
#             MYSQL_ROOT_HOST: "%"
#             MYSQL_DATABASE: '${DB_DATABASE}'
#             MYSQL_USER: '${DB_USERNAME}'
#             MYSQL_PASSWORD: '${DB_PASSWORD}'
#             MYSQL_ALLOW_EMPTY_PASSWORD: 1
#         volumes:
#             - 'sail-mysql:/var/lib/mysql'
#             - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
#         networks:
#             - sail
#         healthcheck:
#             test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
#             retries: 3
#             timeout: 5s
# networks:
#     sail:
#         driver: bridge
# volumes:
#     sail-mysql:
#         driver: local

# version: '3'
# services:
#   backend:
#     build:
#       context: ./news-backend
#       dockerfile: Dockerfile
#     ports:
#       - '8000:8000'
#     volumes:
#       - './news-backend:/var/www/html'
#     networks:
#       - news-network
#   frontend:
#     build:
#       context: ./news-frontend
#       dockerfile: Dockerfile
#     volumes:
#       - ./news-frontend:/app
#     ports:
#       - 3000:3000
#     networks:
#       - news-network
#   database:
#     image: mysql:5.7
#     ports:
#       - 3306:3306
#     environment:
#       MYSQL_DATABASE: news_db
#       MYSQL_ROOT_PASSWORD: 
#     volumes:
#       - ./db_data:/var/lib/mysql
#     networks:
#       - news-network
# networks:
#   news-network:

version: '3'
services:

  backend:
    build:
      context: ./news-backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - './news-backend:/var/www/html'
    networks:
      - news-network

  frontend:
    build:
      context: ./news-frontend
      dockerfile: Dockerfile
    volumes:
      - ./news-frontend:/app
    ports:
      - 3000:3000
    networks:
      - news-network

#   database:
#     image: mysql:latest
#     environment:
#       MYSQL_DATABASE: news_db
#       MYSQL_USERNAME: root
#       MYSQL_PASSWORD: 
#     ports:
#       - '3306:3306'
#     volumes:
#       - ./database:/var/lib/mysql
#     networks:
#       - news-network

  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      PMA_ARBITRARY: 1
    ports:
      - 9001:80
    networks:
      - news-network

networks:
  news-network:
    driver: bridge